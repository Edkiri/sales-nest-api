datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  role     UserRole
}

enum UserRole {
  WORKER
  ADMIN
}

model Client {
  id           Int     @id @default(autoincrement())
  identityCard String? @unique
  phoneNumber  String
  name         String
  email        String?
  sales        Sale[]
}

model Sale {
  id          Int     @id @default(autoincrement())
  status      Int     @default(1)
  description String?

  client   Client?   @relation(fields: [clientId], references: [id])
  clientId Int?
  orders   Order[]
  payments Payment[]
}

model Product {
  id          Int     @id @default(autoincrement())
  brand       String?
  description String?
  reference   String  @unique
  name        String  @unique
  price       Float?
  stock       Float   @default(0)
  isActive    Boolean @default(true)
  orders      Order[]
}

model Order {
  id       Int   @id @default(autoincrement())
  quantity Float
  price    Float

  product   Product @relation(fields: [productId], references: [id])
  productId Int
  sale      Sale    @relation(fields: [saleId], references: [id])
  saleId    Int
}

model Payment {
  id     Int   @id @default(autoincrement())
  amount Float
  rate   Float

  paymentMethod   PaymentMethod @relation(fields: [paymentMethodId], references: [id])
  paymentMethodId Int

  currency   Currency @relation(fields: [currencyId], references: [id])
  currencyId Int

  sale   Sale @relation(fields: [saleId], references: [id])
  saleId Int
}

model Currency {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  Payment       Payment[]
  PaymentMethod PaymentMethod[]
}

model PaymentMethod {
  id   Int    @id @default(autoincrement())
  name String @unique

  currency   Currency  @relation(fields: [currencyId], references: [id])
  currencyId Int
  Payment    Payment[]
}
